---
- hosts: localhost 
  # become: true
  tasks: 
    - name: check for existing files
      block:
        - name: register status of Noto Nerd Fonts
          stat:
            path: /usr/shares/fonts/noto-nerd-fonts
          register: noto_nerd_fonts

<<<<<<< HEAD
        - name: register status of betterlockscreen
          stat:
            path: /usr/local/bin/arcolinux-betterlockscreen
          register: betterlockscreen
=======
        - name: register status of Nordic theme
          stat:
            path: /usr/share/themes/Nordic
          register: nordic_theme

        - name: register status of Nordzy-cyan-dark icons
          stat:
            path: /usr/share/icons/Nordzy-cyan-dark
          register: nordzy_icons

        - name: register status of lockscreen
          stat:
            path: /usr/local/bin/i3lock
          register: lockscreen

        - name: register status of logout
          stat:
            path: /usr//bin/archlinux-logout
          register: logout

    - name: Install baseline applications
      block:
        - name: install tools
          dnf:
            name:
              - dnf-utils # dnf utilities
              - flatpak # System Agnostic Package Management
              - filelight # Disk Usage Display
              - libreoffice # Office Suite
              - mpv # Lightweight Media Player
              - qbittorrent # Torrent Client
          become: true

        - name: Install Repos
          block:
            - name: Install Flatpak Repos
              community.general.flatpak_remote:
                name: flathub
                state: present
                flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo
                method: system 

            - name: Install RPM Fusion Repos
              block:
              - name: Install RPM Fusion Free
                dnf:
                  name: "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ansible_distribution_major_version}}.noarch.rpm"
                  disable_gpg_check: true
                become: true

              - name: Install RPM Fusion NonFree
                dnf:
                  name: "https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ansible_distribution_major_version}}.noarch.rpm"
                  disable_gpg_check: true
                become: true

            - name: install Flatpak programs
              community.general.flatpak:
                name:
                  - com.github.tchx84.Flatseal #Flatpak Permissions GUI Manager

        - name: install archiving tools
          dnf:
            name:
              - ark # Archive Manager
              - zip
              - unrar
              - unzip
          become: true

        - name: install browsers
          dnf:
            name:
              - chromium
              - qutebrowser
          become: true

        - name: install terminals and terminal software
          dnf:
            name:
              - alacritty
              - btop
              - git
              - lshw
              - tmux
              - zsh
          become: true

        - name: install terminal editors
          block:
            - name: Install NeoVim
              dnf:
                name: neovim
              become: true

        #     - name: Install LunarVim

        - name: install applications
          block:
            - name: install misc packages
              dnf:
                name:
                  - polkit-gnome
                  - dunst # notifcation managers
                  - feh # wallpaper
                  - lshw
                  - tmux
                  - zsh
              become: true

            - name: install backup software
              dnf:
                name:
                  - timeshift
              become: true

            - name: install build software
              dnf:
                name:
                  - cmake
                  - meson
              become: true

            - name: install file managers and dependencies
              dnf:
                name:
                  - gvfs
                  - gvfs-smb
                  - gvfs-mtp
                  - gvfs-gphoto2
                  - pcmanfm-qt
                  - ranger
              become: true

            - name: install power management
              dnf:
                name:
                  - tlp
                  - xfce4-power-manager
              become: true

            - name: install printing system
              dnf:
                name:
                  - cups
                  - system-config-printer
              become: true

            - name: install programming langauages, packages, and frameworks
              dnf:
                name:
                  - cargo
                  - go
                  - gcc
                  - gcc-c++
                  - nodejs
                  - python3-pip
                  - python3-poetry
                  - rust
              become: true

            - name: install powershell 7
              block:
                - name: install powershell repo
                  dnf:
                    name: https://github.com/PowerShell/PowerShell/releases/download/v7.3.2/powershell-7.3.2-1.rh.x86_64.rpm
                    disable_gpg_check: true
                  become: true

                - name: install powershell
                  dnf:
                    name: powershell
                  become: true

            - name: install virtualization packages
              dnf:
                name: "@virtualization"
              become: true

            - name: install audio and audio control
              dnf:
                name: 
                  - pipewire
                  - pipewire-alsa
                  - pipewire-pulseaudio
                  - pavucontrol
                  - wireplumber
              become: true

            - name: install misc packages
              dnf:
                name:
                  - docker
                  - ImageMagick
              become: true

            - name: install pywal via pip
              pip:
                name: pywal
              become: true

            - name: install AppImageLauncher
              dnf:
                name: https://github.com/TheAssassin/AppImageLauncher/releases/download/v2.2.0/appimagelauncher-2.2.0-travis995.0f91801.x86_64.rpm
                disable_gpg_check: true
              become: true

            - name: install TeamViewer
              dnf:
                name: https://download.teamviewer.com/download/linux/teamviewer.x86_64.rpm
                disable_gpg_check: true
              become: true
                
      tags: baseline

    - name: install xorg and tools
      block:
        - name: Install xorg
          dnf:
            name: "@base-x"
          become: true

        # TODO: Register a variable to check if Ibhagwan fork already exists
        - name: Install Ibhagwan fork of Picom
          block:
            - name: install dependencies
              dnf:
                name:
                  - dbus-devel
                  - libconfig-devel
                  - libdrm-devel
                  - libev-devel
                  - libX11-devel
                  - libX11-xcb
                  - libXext-devel
                  - libxcb-devel
                  - libGL-devel
                  - libEGL-devel
                  - pcre-devel
                  - pcre2-devel
                  - pixman-devel
                  - uthash-devel
                  - xcb-util-image-devel
                  - xcb-util-renderutil-devel
                  - xorg-x11-proto-devel
              become: true

            - name: clone repo
              git:
                repo: https://github.com/ibhagwan/picom
                depth: 1
                dest: /tmp/ibhagwan-picom
                single_branch: true
                version: next-rebase

            - name: meson setup
              shell: 
                chdir: /tmp/ibhagwan-picom
                cmd: meson setup --buildtype=release . build
                creates: /tmp/ibhagwan-picom/build/

            - name: build and install
              shell:
                chdir: /tmp/ibhagwan-picom
                cmd: ninja -C build install
                creates: /usr/local/bin/picom
              become: true

        - name: Install tiling window manager packages
          block:
            - name: install xorg screen management tools
              dnf:
                name:
                  - arandr
                  - autorandr
              become: true

            - name: install application launcher
              dnf:
                name:
                  - rofi-wayland
                  - rofi-themes
              become: true

            - name: install logout menu
              block:
                - name: download archlinux-logout
                  git:
                    repo: https://github.com/arcolinux/archlinux-logout
                    dest: /tmp/archlinux-logout

                - name: install archlinux-logout
                  copy:
                    src: /tmp/archlinux-logout/usr/
                    dest: /usr/
                    mode: "755"
                  become: true

                - name: copy archlinux-logout config file
                  copy:
                    src: /tmp/archlinux-logout/etc/
                    dest: /etc/ 
                  become: true
              when: not logout.stat.exists

            - name: Install Network Manager
              dnf:
                name:
                  - NetworkManager
                  - NetworkManager-bluetooth
                  - NetworkManager-openconnect
                  - NetworkManager-tui
                  - NetworkManager-wifi
                  - network-manager-applet
                  - nm-connection-editor
              become: true

            - name: Install screenlocker
              block:
                - name: install i3lock dependencies
                  dnf:
                    name:
                      - autoconf
                      - automake
                      - cairo-devel
                      - fontconfig
                      - gcc
                      - libev-devel
                      - libjpeg-turbo-devel
                      - libXinerama
                      - libxkbcommon-devel
                      - libxkbcommon-x11-devel
                      - libXrandr
                      - pam-devel
                      - pkgconf
                      - xcb-util-image-devel
                      - xcb-util-xrm-devel
                      - xset
                  become: true

                - name: download i3lock-color
                  git:
                    repo: https://github.com/Raymo111/i3lock-color.git
                    dest: /tmp/i3lock-color

                - name: install i3lock-color
                  shell:
                    chdir: /tmp/i3lock-color
                    cmd: "./install-i3lock-color.sh"
                    creates: /usr/bin/i3lock
                  become: true
              when: not lockscreen.stat.exists
          tags: tiling, x11    

        - name: Install qtile dependencies
          block: 
            - name: x11 dnf
              dnf:
                name:
                  - libxkbcommon-devel
                  - picom
                  - python3-devel
                  - python3-lxml
                  - python3-psutil
                  - python3-xcffib
              become: true

            - name: x11 pip
              pip:
                name:
                  - pyconfig
                  - xkbcommon
      tags: x11

    - name: install wayland and tools
      block:
        - name: install qtile dependencies
          block:
            - name: wayland dnf
              dnf:
                name:
                  - rofi-wayland
                  - kanshi
                  - swayidle
                  - swaylock
                  - wlogout
                  - wlroots
                  - wdisplays
                  - xdg-desktop-portal-wlr
              become: true

            - name: wayland pip
              pip:
                name:
                  - pywayland
                  - pywlroots
      tags: wayland

    - name: Install qtile
      block:
        - name: ensure pip is installed
          dnf:
            name: python3-pip
            state: present
          become: true

        - name: install common dependencies
          block:
            - name: install common dependencies (DNF)
              dnf:
                name:
                  - pango
                  - python3-cffi
                  - python3-dbus-next
                  - python3-devel
              become: true

        - name: install latest qtile release
          pip:
            name: qtile
          become: true

        - name: create destkop entries
          block:
            - name: create wayland session
              copy:
                dest: /usr/share/wayland-sessions/qtile-wayland.desktop
                content: |
                  [Desktop Entry]
                  Name=Qtile (Wayland)
                  Comment=Qtile Session
                  Exec=qtile start -b wayland
                  Type=Application
                  Keywords=wm;tiling
              become: true

            - name: create x11 session
              copy:
                dest: /usr/share/xsessions/qtile.desktop
                content: |
                  [Desktop Entry]
                  Name=Qtile
                  Comment=Qtile Session
                  Exec=qtile start
                  Type=Application
                  Keywords=wm;tiling
              become: true
      tags: qtile
>>>>>>> fc8fd208cc25307255c9897c22385100c57c6fa7

    - name: install baseline applications
      import_tasks: window_manager.yml
    # - name: Setup LightDM
    #   block:
    #     - name: Install LightDM and Greeter
    #       dnf:
    #         name:
    #           - lightdm
    #           - lightdm-gtk
    #           - lightdm-gtk-greeter-settings
    #
    #     - name: Enable LightDM Service
    #       systemd:
    #         name: lightdm.service
    #         state: started
    #         enabled: yes
    #
    #     - name: Change default target to graphical.target
    #       file:
    #         src: /usr/lib/systemd/system/graphical.target
    #         dest: /etc/systemd/system/default.target
    #         state: link

    - name: install window manager related applications
      import_tasks: window_manager.yml

    - name: install qtile
      import_tasks: qtile.yml

    - name: install theming tools
      import_tasks: theme.yml

<<<<<<< HEAD
    - name: install work Applications
      import_tasks: work.yml

    - name: Update Packages
      dnf:
        update_only: True

    - name: Create User Folders
=======
    - name: configure theming
      block:
        - name: Install theme tools
          dnf:
            name:
              - kvantum
              - lxappearance
              - qt5ct
              - qt5-qtstyleplugins
          become: true

        - name: set qt5ct as qt default
          copy:
            dest: "{{ ansible_env.HOME }}/.profile"
            # dest: "/etc/environment"
            content: |
              export QT_QPA_PLATFORMTHEME="qt5ct"
          # become: true

        - name: Install built-in themes
          dnf:
            name:
              - adwaita-cursor-theme
              - adwaita-icon-theme
              - adwaita-qt5
              - adwaita-qt6
              - breeze-cursor-theme
              - breeze-gtk-gtk3
              - breeze-icon-theme
              - plasma-breeze
          become: true

        - name: Install Nordic GTK theme
          block:
            - name: Download Nordic GTK theme
              get_url:
                url: https://github.com/EliverLara/Nordic/releases/download/v2.2.0/Nordic.tar.xz
                dest: /tmp/

            - name: Extract to root themes folder
              unarchive:
                src: /tmp/Nordic.tar.xz
                dest: /usr/share/themes/
              become: true
          when: not nordic_theme.stat.exists

        - name: Install Nordzy-cyan-dark icons
          block:
            - name: Download Nordic GTK theme
              get_url:
                url: https://github.com/alvatip/Nordzy-icon/releases/download/1.8.1/Nordzy-cyan-dark.tar.gz 
                dest: /tmp/

            - name: Extract to root themes folder
              unarchive:
                src: /tmp/Nordzy-cyan-dark.tar.gz
                dest: /usr/share/icons/
              become: 
          when: not nordzy_icons.stat.exists

        - name: Install fonts
          when: not noto_nerd_fonts.stat.exists
          block:
            - name: create fonts temp folder
              file:
                path: /usr/share/fonts/noto-nerd-fonts
                state: director   - name: Create User Folders
>>>>>>> fc8fd208cc25307255c9897c22385100c57c6fa7
      shell:
        cmd: xdg-user-dirs-update
        chdir: "{{ ansible_env.HOME }}"
        creates: "{{ ansible_env.HOME }}/Documents"

